// Generated by LiveScript 1.2.0
(function(){
  var root, postJsonExt, getCookie, addlogfb, addlog;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  postJsonExt = function(url, jsondata, callback){
    return $.ajax({
      type: 'POST',
      url: url,
      data: JSON.stringify(jsondata),
      success: function(data){
        if (callback != null) {
          return callback(data);
        }
      },
      contentType: 'application/json'
    });
  };
  getCookie = function(callback){
    return chrome.cookies.getAll({
      url: 'http://feedlearn.herokuapp.com/'
    }, function(cookie){
      var output, i$, len$, x, name, value;
      output = {};
      for (i$ = 0, len$ = cookie.length; i$ < len$; ++i$) {
        x = cookie[i$];
        name = unescape(x.name);
        value = unescape(x.value);
        output[name] = value;
      }
      return callback(output);
    });
  };
  addlogfb = function(logdata, cookie){
    var data;
    data = $.extend({}, logdata);
    data.username = cookie.fullname;
    data.lang = cookie.lang;
    data.format = cookie.format;
    data.scriptformat = cookie.scriptformat;
    data.time = Date.now();
    data.timeloc = new Date().toString();
    return postJsonExt('https://feedlearn.herokuapp.com/addlogfb', data);
  };
  addlog = function(logdata, cookie){
    var data;
    data = $.extend({}, logdata);
    data.username = cookie.fullname;
    data.lang = cookie.lang;
    data.format = cookie.format;
    data.scriptformat = cookie.scriptformat;
    data.time = Date.now();
    data.timeloc = new Date().toString();
    return postJsonExt('https://feedlearn.herokuapp.com/addlog', data);
  };
  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse){
    if (request != null && request.feedlearn === 'fbstillopen') {
      getCookie(function(cookie){
        return addlogfb({
          type: 'fbstillopen',
          mostrecentmousemove: request.mostrecentmousemove,
          timeopened: request.timeopened,
          timesincemousemove: request.timesincemousemove
        }, cookie);
      });
    }
    if (request != null && request.feedlearn === 'getformat') {
      return getCookie(function(cookie){
        var format;
        format = cookie.format;
        sendResponse({
          feedlearn: true,
          format: format
        });
        chrome.tabs.query({}, function(tabs){
          var i$, len$, tab, results$ = [];
          for (i$ = 0, len$ = tabs.length; i$ < len$; ++i$) {
            tab = tabs[i$];
            results$.push(chrome.tabs.sendMessage(tab.id, {
              feedlearn: true,
              format: cookie.format
            }));
          }
          return results$;
        });
        addlog({
          type: 'fbvisit'
        }, cookie);
        return addlogfb({
          type: 'fbvisit'
        }, cookie);
      });
    }
  });
}).call(this);
